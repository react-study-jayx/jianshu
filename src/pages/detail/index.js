import React from 'react'
import {Title,DetailWrapper,Content} from './style'
class Detail extends React.Component{
    constructor(props){
        super(props);
    }
    render(){
        return (
            <DetailWrapper>
                <Title>一张图道尽老程序员们的出路：谁说我们是吃年轻饭的……</Title>
                <Content>          
                        <div class="show-content-free">
                            <p>进入一个行业，开始一份工作，不论在最初的时候，你是因为喜欢还是被动接受，或多或少的都会成为你一段时间内为之奋斗的事业。</p><p>1边工作边迷茫也许是大多数人的常态，觉得这份工作不适合自己，可又不知道应该去做什么；喜欢着自己的工作，却又不知道怎么进一步提升，内心难免焦躁。尤其是随着年龄的增长，更希望能够在事业上有所发展。</p><p>有人说，程序员真的只能吃青春饭，企业在招聘时会在意程序员的年龄，大龄程序员一旦离职找工作就会变得艰难。面对年龄很多程序员都表示束手无策。</p><p>其实，程序员其实也和其他职业一样，干的越久技术越熟练，经验自然更丰富。如果你的年龄和你的薪资不相符，你就应该考虑是不是年龄上去了能力却没上去，你所求的薪资和你要求的岗位，要让企业觉得你值这个价，自然不会被淘汰。</p><p>2如今程序员越来越多，应该怎样规划自己的职业道路呢？程序员的出路在哪呢？</p><p>一张图道尽程序猿们的出路：</p><div class="image-package">
                            
                            <div class="image-caption"></div>
                            </div><p>3对于程序员的工作出路，有以下几点建议：</p><p><b>20-27岁：技术积累阶段</b></p><p>假设本科22岁毕业，那么工作的前5年对你来说是打基础的阶段。在这5年时间里面，你要积累足够的代码量，打磨自己的技术实力，成为某一个技术细分领域的牛人。</p><p><b>28-35岁：形成思维方法论和知识体系的阶段。</b></p><p>当你积累足够的代码量，例如超过10万行代码以后，你应该形成了自己的思维方法论和自己独立的学习技巧，任何新的技术在你眼中都能迅速的看到技术的本质，快速吸收成为你的知识体系的一部分。</p><p>到了这个阶段，你会发现你所完全不了解的新技术新知识是非常少的，新技术对你来说也不过是几天时间就把玩的很好的玩具，学习越来越轻松，掌握的知识储备越来越多。</p><div class="image-package">
                            
                            <div class="image-caption"></div>
                            </div><p>你开始逐渐的不再满足于纯技术领域的探索，而是思考更多的问题：如何将技术转化为生产力;什么技术在什么样的场合能够发挥最大的价值;技术团队应该怎样构建;在一家公司里面，我怎样才能将自己的技术能力最大化的发挥出来?</p><p>在这个阶段，积累技术对你来说简直是小菜一碟，你更需要磨练的是思考能力，形成自己的思维方法和知识体系，这将是你帮助你一生的武器。</p><p><b>35岁以后：了解自己，把自己变现的阶段。</b></p><p>毋须讳言的是，35岁以后你的一线coding能力一定是下降的，你写代码绝对不如25岁的程序员快，效率高。但是这不重要，因为编程只是你整个武器库当中相对最不重要的了，你的经验，你的视野，你的架构能力，你的管理能力，你分析和解决问题的能力已经远远不局限于技术这个领域。</p>
                        </div>
                       
                </Content>
            </DetailWrapper>
        )
    }
}
export default Detail;